{"last_node_id":3,"last_link_id":2,"nodes":[{"id":1,"type":"SaveImage","pos":[1210,160],"size":[315,270],"flags":{},"order":2,"mode":0,"inputs":[{"name":"images","type":"IMAGE","link":1}],"outputs":[],"properties":{"cnr_id":"comfy-core","ver":"0.3.15","Node name for S&R":"SaveImage"},"widgets_values":["ComfyUI"]},{"id":2,"type":"FL_CodeNode","pos":[960,160],"size":[210,184],"flags":{},"order":1,"mode":0,"inputs":[{"name":"0_string","type":"STRING","link":2},{"name":"input","type":"*","link":null}],"outputs":[{"name":"output_0","type":"*","links":[1],"slot_index":0},{"name":"output_1","type":"*","links":null},{"name":"output_2","type":"*","links":null},{"name":"output_3","type":"*","links":null}],"properties":{"cnr_id":"comfyui_fill-nodes","ver":"1.1.1","Node name for S&R":"FL_CodeNode"},"widgets_values":["import torch\nimport numpy as np\nfrom PIL import Image, ImageDraw, ImageFont\nimport os\n\n# 从输入获取文本，如果没有输入则使用默认值\ninput_text = inputs[0] if len(inputs) > 0 and inputs[0] else \"你好\"\n\n# 创建一个白底黑字的图片\nimg = Image.new('RGB', (512, 512), color=(255, 255, 255))\ndraw = ImageDraw.Draw(img)\n\n# 尝试加载一个支持中文的字体\nfont_path = None\npossible_font_paths = [\n    \"C:/Windows/Fonts/simhei.ttf\",  # 黑体\n    \"C:/Windows/Fonts/simsun.ttc\",  # 宋体\n    \"C:/Windows/Fonts/msyh.ttc\",    # 微软雅黑\n]\n\nfor path in possible_font_paths:\n    if os.path.exists(path):\n        font_path = path\n        break\n\ntry:\n    if font_path:\n        # 根据文本长度动态调整字体大小\n        text_len = len(input_text)\n        font_size = min(120, int(400 / max(1, text_len)))\n        font = ImageFont.truetype(font_path, font_size)\n        \n        # 计算文本位置使其居中\n        text_bbox = draw.textbbox((0, 0), input_text, font=font)\n        text_width = text_bbox[2] - text_bbox[0]\n        text_height = text_bbox[3] - text_bbox[1]\n        position = ((512 - text_width) // 2, (512 - text_height) // 2)\n        \n        draw.text(position, input_text, font=font, fill=(0, 0, 0))\n    else:\n        # 如果找不到中文字体，绘制简单的文本提示\n        draw.text((100, 256), f\"Text: {input_text}\", fill=(0, 0, 0))\nexcept Exception as e:\n    # 如果出错，绘制错误信息\n    error_msg = f\"Error: {str(e)[:50]}\"\n    draw.text((50, 256), error_msg, fill=(0, 0, 0))\n\n# 转换为numpy数组，然后转换为PyTorch张量\nnp_img = np.array(img).astype(np.float32) / 255.0  # 归一化到0-1范围\ntensor_img = torch.from_numpy(np_img).unsqueeze(0)  # 添加批次维度\n\noutputs[0] = tensor_img\n","./res/hello.py",false],"color":"#16727c","bgcolor":"#4F0074"},{"id":3,"type":"easy string","pos":[720,160],"size":[210,58],"flags":{},"order":0,"mode":0,"inputs":[],"outputs":[{"name":"string","type":"STRING","links":[2],"slot_index":0}],"properties":{"cnr_id":"comfyui-easy-use","ver":"1.2.7","Node name for S&R":"easy string"},"widgets_values":["GSA352G02"]}],"links":[[1,2,0,1,0,"IMAGE"],[2,3,0,2,0,"*"]],"groups":[],"config":{},"extra":{"ds":{"scale":1.4641000000000006,"offset":[-559.6684231668539,-83.95842360398409]},"ue_links":[]},"version":0.4}